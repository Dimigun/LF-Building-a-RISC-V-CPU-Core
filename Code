$reset = *reset;
        
   $pc[31:0] = >>1$next_pc;
   
   $next_pc[31:0] = $reset?'0:$pc + 32'd4;
   
   `READONLY_MEM($pc, $$instr[31:0])
   $is_u_instr = $instr[6:2] ==? 5'b0x101;
   $is_i_instr = $instr[6:2] ==? 5'b0000x ||
   $instr[6:2] ==? 5'b001x0 ||
   $instr[6:2] ==? 5'b11001;
   $is_r_instr = $instr[6:2] ==? 5'b01011 ||
   $instr[6:2] ==? 5'b011x0 ||
   $instr[6:2] ==? 5'b10100;
   $is_s_instr = $instr[6:2] ==? 5'b0100x;
   $is_b_instr = $instr[6:2] ==? 5'b11000;
   $is_j_instr = $instr[6:2] ==? 5'b11011;   
   
   $funct3[2:0] = $instr[14:12];
   $rs1[4:0] = $instr[19:15];
   $rs2[4:0] = $instr[24:20];
   $rd[4:0] = $instr[11:7];
   $opcode[6:0] = $instr[6:0];
   
   $rs2_valid = $is_r_instr || $is_s_instr || $is_b_instr;
   $rs1_valid = $is_r_instr || $is_s_instr || $is_b_instr || $inst_i_instr;
   $rd_valid = $is_u_instr || $is_j_instr || $is_r_instr || $is_i_instr;
   $imm_valid = $is_i_instr || $is_s_instr || $is_b_instr || $is_u_instr || $is_j_instr;
   
   `BOGUS_USE($rd $rd_valid $rs1 $rs1_valid $rs2 $rs2_valid);
   
   
   $imm[31:0] = $is_i_instr ? {{21{$instr[31]}}, $instr[30:20]} :
                $is_s_instr ? {{21{$instr[31]}}, $instr[30:25], $instr[11:7]} :
                $is_b_instr ? {{20{$instr[31]}}, $instr[7], $instr[30:25], $instr[11:8], 1'b0} :
                $is_u_instr ? {$instr[31:12], 12'b0} :
                $is_j_instr ? {{12{$instr[31]}}, $instr[19:12], $instr[20], $instr[30:21], 1'b0} :
                32'b0 ;
   
   $dec_bits[10:0] = {$instr[30],$funct3,$opcode};
   $is_beq = $dec_bits ==? 11'bx_000_1100011;
   $is_bne = $dec_bits ==? 11'bx_001_1100011;
   $is_blt = $dec_bits ==? 11'bx_100_1100011;
   $is_bge = $dec_bits ==? 11'bx_101_1100011;
   $is_bltu = $dec_bits ==? 11'bx_110_1100011;
   $is_bgeu = $dec_bits ==? 11'bx_111_1100011;
   $is_addi = $dec_bits ==? 11'bx_000_0010011;
   $is_add = $dec_bits ==? 11'bx_000_0110011;
   
   $rf1_rd_en1 = $rd1_en;
   $rf1_rd_index[\$clog2(32)-1:0] =$rd1_index[4:0];
   $rf1_rd_en2 = $rd2_en;
   $rf1_rd_index2[\$clog2(32)-1:0] = $rd2_index[4:0];
   $rf1_wr_data[32-1:0] = $wr_data[31:0];
   $rf1_wr_data[32-1:0] = $wr_data[31:0];
   $rf1_wr_en = $wr_en;
   $rf1_wr_index[\$clog2(32)-1:0] = $wr_index[4:0];
   $rd1_data[32-1:0] = $rf1_rd_en1 ? /xreg[$rf1_rd_index1]$value : 'X;
   $rd2_data[32-1:0] = $rf1_rd_en2 ? /xreg[$rf1_rd_index2]$value : 'X;
